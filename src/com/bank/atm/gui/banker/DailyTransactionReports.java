package com.bank.atm.gui.banker;

import com.bank.atm.backend.collections.TransactionsCollectionManager;
import com.bank.atm.backend.transactions.Transaction;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.*;

/**
 * @author Navoneel Ghosh
 * GUI for the banker. Banker is able to see the daily transactions.
 * Future Implementation - Will implement datepicker to enable the banker to get transactions for the date of choice.
 */
public class DailyTransactionReports extends JFrame {
    private JPanel dailyTransactionReportPanel;
    private JScrollPane dailyTxnScrollPane;
    private JPanel tablePanel;
    private JTable dailyTxnTable;
    private JButton backButton;
    private JPanel backPanel;


    public DailyTransactionReports(String title) {
        super(title);
        $$$setupUI$$$();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setContentPane(dailyTransactionReportPanel);
        this.setPreferredSize(new Dimension(800, 500));//set width and height of our frame
        this.pack();
        this.setLocationRelativeTo(null);
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                JFrame frame = new BankerMenu("Banker Menu");
                frame.setVisible(true);
            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        dailyTransactionReportPanel = new JPanel();
        dailyTransactionReportPanel.setLayout(new GridBagLayout());
        tablePanel = new JPanel();
        tablePanel.setLayout(new GridBagLayout());
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        dailyTransactionReportPanel.add(tablePanel, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        tablePanel.add(dailyTxnScrollPane, gbc);
        dailyTxnScrollPane.setViewportView(dailyTxnTable);
        backPanel = new JPanel();
        backPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        dailyTransactionReportPanel.add(backPanel, gbc);
        backButton = new JButton();
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        backPanel.add(backButton, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return dailyTransactionReportPanel;
    }

    private void createTxnTable() {
        String[] columnNames = {"Transaction ID", "First Name",
                "Last Name", "From Account", "To Account", "Amount", "Transaction Type", "Date"};

        List<Transaction> allTransactions = new ArrayList<>();
        allTransactions.addAll(TransactionsCollectionManager.getInstance().all());
        List<Transaction> data = new ArrayList<>();
        Date localDate = new Date();
        for (Transaction t : allTransactions) {
            if (t.getDate().getDate() == localDate.getDate() &&
                    t.getDate().getMonth() == localDate.getMonth() &&
                    t.getDate().getYear() == localDate.getYear()) {
                data.add(t);
            }
        }

        TxnCustomTableModel txnCustomTableModel = new TxnCustomTableModel(data, columnNames);
        dailyTxnTable = new JTable(txnCustomTableModel);
        dailyTxnScrollPane = new JScrollPane(dailyTxnTable);
        dailyTxnTable.setFillsViewportHeight(true);
        dailyTxnScrollPane.setVisible(true);
        dailyTxnTable.setVisible(true);
        dailyTxnTable.setRowHeight(20);
    }

    private void createUIComponents() {
        createTxnTable();
    }
}
