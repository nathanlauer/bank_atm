package com.bank.atm.gui.banker;

import com.bank.atm.backend.accounts.Account;
import com.bank.atm.backend.collections.AccountsCollectionManager;
import com.bank.atm.backend.collections.TransactionsCollectionManager;
import com.bank.atm.backend.collections.UsersCollectionManager;
import com.bank.atm.backend.transactions.Transaction;
import com.bank.atm.backend.users.User;
import com.bank.atm.util.ID;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * @author Navoneel Ghosh
 * GUI for banker. Enables banker to see details of the selected client.
 */
public class ViewSingleUserDetails extends JFrame {
    private JPanel viewSingleUserDetailsPanel;
    private JTable singleUserTable;
    private JLabel clientNameLabel;
    private JScrollPane singleUserScrollPane;
    private JButton backButton;
    private JPanel backPanel;

    public ViewSingleUserDetails(String title, ID selectedUserID) {
        super(title);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.setContentPane(viewSingleUserDetailsPanel);
        this.setPreferredSize(new Dimension(800, 500));//set width and height of our frame
        this.pack();
        this.setLocationRelativeTo(null);
        createViewUserTable(selectedUserID);
        backButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                dispose();
                JFrame frame = new ViewUser("View Users", new ArrayList<>());
                frame.setVisible(true);
            }
        });
    }

    private void createViewUserTable(ID selectedUserID) {
        User searchedUser = UsersCollectionManager.getInstance().findByOwnerID(selectedUserID).get(0);
        this.clientNameLabel.setText(searchedUser.getFirstName() + " " + searchedUser.getLastName());
        String[] columnNames = {"Account ID", "Amount", "Account Type"};
        List<Account> userAccounts = new ArrayList<Account>();
        userAccounts.addAll(AccountsCollectionManager.getInstance().findByOwnerID(selectedUserID));

        SingleUserCustomTableModel singleUserCustomTableModel = new SingleUserCustomTableModel(userAccounts, columnNames);
        singleUserTable.setModel(singleUserCustomTableModel);
        singleUserScrollPane.getViewport().add(singleUserTable);
        singleUserTable.setFillsViewportHeight(true);
        singleUserScrollPane.setVisible(true);
        singleUserTable.setVisible(true);
        singleUserTable.setRowHeight(30);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        viewSingleUserDetailsPanel = new JPanel();
        viewSingleUserDetailsPanel.setLayout(new GridBagLayout());
        singleUserScrollPane = new JScrollPane();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        viewSingleUserDetailsPanel.add(singleUserScrollPane, gbc);
        singleUserTable = new JTable();
        singleUserScrollPane.setViewportView(singleUserTable);
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        viewSingleUserDetailsPanel.add(panel1, gbc);
        clientNameLabel = new JLabel();
        clientNameLabel.setText("Label");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.WEST;
        panel1.add(clientNameLabel, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel1.add(spacer2, gbc);
        backPanel = new JPanel();
        backPanel.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        viewSingleUserDetailsPanel.add(backPanel, gbc);
        backButton = new JButton();
        backButton.setText("Back");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        backPanel.add(backButton, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        backPanel.add(spacer3, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return viewSingleUserDetailsPanel;
    }

}
